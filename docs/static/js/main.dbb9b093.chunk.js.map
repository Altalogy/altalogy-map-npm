{"version":3,"sources":["components/AltaMap/models/MapElement.js","components/AltaMap/components/Heatmaps/index.js","components/AltaMap/components/Heatmaps/Heatmap.jsx","components/AltaMap/components/MapMarker/index.js","components/AltaMap/components/MapMarker/MapMarker.jsx","components/AltaMap/components/MapElements/index.js","components/AltaMap/components/MapElements/MapElements.jsx","components/AltaMap/components/MapLeafletDrawer/MapLeafletDrawer.jsx","components/AltaMap/components/MapLeafletDrawer/index.js","components/AltaMap/components/MapDrawer/MapDrawer.jsx","components/AltaMap/components/MapDrawer/index.js","components/AltaMap/AltaMap.jsx","components/AltaMap/index.js","components/AddData/AddData.jsx","components/AddData/index.js","components/DrawerControl/index.js","components/DrawerControl/DrawerControl.jsx","components/HideElements/index.js","components/HideElements/HideElements.jsx","components/DeleteData/index.js","components/DeleteData/DeleteData.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["MapElement","params","Object","classCallCheck","this","properties","assign","id","uuid","type","tags","options","data","Heatmap","heatmap","props","react_default","a","createElement","HeatmapLayer_default","fitBoundsOnLoad","fitBoundsOnUpdate","points","longitudeExtractor","m","latitudeExtractor","intensityExtractor","parseFloat","React","Component","MapMarker","marker","Marker","position","popup","Popup","MapElements","elements","length","map","mapObject","idx","hidden","className","key","Heatmaps","components_MapMarker","lat","lng","getMapElements","DRAW_OPTION","rectangle","polyline","circle","circlemarker","polygon","DRAW_MENU_POSITION","topleft","topright","bottomright","bottomleft","MapLeafletDrawer","_this","possibleConstructorReturn","getPrototypeOf","call","state","mapLeafletDrawer","active","setMapLeafletDrawer","bind","assertThisInitialized","pos","option","_","hasIn","defineProperty","setState","FeatureGroup","esm","draw","MapDrawer","mapDrawer","editable","removable","mapDrawerSettings","mapDrawerData","window","react_map","_mapDrawerRef","setMapDrawer","setMapDrawerSettings","editMapDrawer","removeMapDrawer","getMapDrawerData","cancelMapDrawer","x","_this2","leafletElement","edit","featureGroup","_layers","_this$state","_toolbars","_modes","handler","enable","disable","remove","ref","el","DEFAULT_VIEWPORT","center","zoom","AltaMap","drawRef","createRef","leafletDrawer","viewport","addElements","setViewport","addMarker","getElements","mapElement","elementsArray","me","concat","updateAltaMapState","tag","deleteItem","_this3","indexOf","splice","_this4","_this5","_this6","element","Map","minZoom","style","width","height","TileLayer","url","tileLayer","attribution","components_MapLeafletDrawer","components_MapDrawer","components_MapElements","ADDRESS_POINTS","value","label","AddData","handleChange","selectedOption","groupMarkers","updateHeatmapValue","e","target","elementArray","number","charAt","JSON","parse","push","split","y","group","objectSpread","name","onChange","rows","cols","setGroupMarker","placeholder","onClick","addGroupMarker","setMarker","_this$state2","altaRef","current","react_select_browser_esm","classNamePrefix","getOptionComponent","confirmAddData","disabled","DrawerControl","HideElements","hide","nextProps","setHideOption","hideElementById","confirmHideElement","DeleteData","setDeleteOption","deleteElementById","newOptions","index","confirmDeleteElement","App","didMount","components_DeleteData","components_HideElements","components_DrawerControl","components_AltaMap","components_AddData","getDeleteAndHideComponent","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iXAKqBA,EACnB,SAAAA,EAAYC,GAASC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GACnB,IAAMK,EAAaH,OAAOI,OAAO,CAE/BC,GAAIC,MACJC,KAAM,KACNC,KAAM,KACNC,QAAS,KACTC,KAAM,MACLX,GAEHG,KAAKG,GAAKF,EAAWE,GACrBH,KAAKK,KAAOJ,EAAWI,KACvBL,KAAKM,KAAOL,EAAWK,KACvBN,KAAKO,QAAUN,EAAWM,QAC1BP,KAAKQ,KAAOP,EAAWO,uBClBZC,mLCEH,IACAC,EAAYV,KAAKW,MAAjBD,QACR,OACEE,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,iBAAe,EACfC,mBAAiB,EACjBC,OAAQR,EAAQF,KAChBW,mBAAoB,SAAAC,GAAC,OAAIA,EAAE,IAC3BC,kBAAmB,SAAAD,GAAC,OAAIA,EAAE,IAC1BE,mBAAoB,SAAAF,GAAC,OAAIG,WAAWH,EAAE,cAVxBI,IAAMC,2BCDbC,ECCG,SAACf,GAAU,IACnBgB,EAAWhB,EAAXgB,OACR,OACEf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQzB,GAAIwB,EAAOxB,GAAI0B,SAAUF,EAAOE,UACpCF,EAAOG,OACPlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACGJ,EAAOG,SCPHE,2LCKI,IACPC,EAAajC,KAAKW,MAAlBsB,SACR,GAAIA,EAASC,OAAS,EACpB,OACED,EAASE,IAAI,SAACC,EAAWC,GACvB,IAAID,EAAUE,OAAQ,CACpB,GAAsB,YAAnBF,EAAU/B,KACX,OACEO,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,mBAAmBC,IAAKpC,OACrCQ,EAAAC,EAAAC,cAAC2B,EAAD,CACE/B,QAAS0B,KAIV,GAAsB,kBAAnBA,EAAU/B,KAClB,OACE+B,EAAU5B,KAAK2B,IAAI,SAAC3B,GAAD,OACjBI,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,kBAAkBC,IAAKpC,OACpCQ,EAAAC,EAAAC,cAAC4B,EAAD,CACEf,OAAQ,CACNxB,GAAIiC,EAAUjC,GACd0B,SAAU,CAACc,IAAInC,EAAKmC,IAAIC,IAAIpC,EAAKoC,KACjCd,MAAOtB,GAAQA,EAAKsB,MAAQtB,EAAKsB,MAAQ,SAM9C,GAAsB,WAAnBM,EAAU/B,KAClB,OACEO,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,kBAAkBC,IAAKpC,OACpCQ,EAAAC,EAAAC,cAAC4B,EAAD,CACEf,OAAQ,CACNxB,GAAIiC,EAAUjC,GACd0B,SAAU,CAACc,IAAIP,EAAU5B,KAAKmC,IAAIC,IAAIR,EAAU5B,KAAKoC,KACrDd,MAAOM,EAAU7B,SAAW6B,EAAU7B,QAAQuB,MAAQM,EAAU7B,QAAQuB,MAAQ,OAO5F,OAAOO,qCAOb,OACEzB,EAAAC,EAAAC,cAAA,WACId,KAAK6C,yBArDWpB,sDCApBqB,EAAc,CAClBC,UAAU,YACVC,SAAS,WACTC,OAAO,SACPC,aAAa,eACbvB,OAAO,SACPwB,QAAQ,WAGJC,EAAqB,CACzBC,QAAQ,UACRC,SAAS,WACTC,YAAY,cACZC,WAAW,cChBEC,cDoBb,SAAAA,EAAY9C,GAAO,IAAA+C,EAAA,OAAA5D,OAAAC,EAAA,EAAAD,CAAAE,KAAAyD,IACjBC,EAAA5D,OAAA6D,EAAA,EAAA7D,CAAAE,KAAAF,OAAA8D,EAAA,EAAA9D,CAAA2D,GAAAI,KAAA7D,KAAMW,KAEDmD,MAAQ,CACXC,iBAAkB,CAChBC,QAAQ,EACRnC,SAAU,WACVtB,QAAS,KAIbmD,EAAKO,oBAAsBP,EAAKO,oBAAoBC,KAAzBpE,OAAAqE,EAAA,EAAArE,CAAA4D,IAXVA,mFAcCU,EAAIC,GACtB,IAAIxC,EAAW,KACXtB,EAAU,KACX+D,IAAEC,MAAMnB,EAAmBgB,KAC5BvC,EAAWuC,GAEVE,IAAEC,MAAMzB,EAAYuB,GACrB9D,EAAOT,OAAA0E,EAAA,EAAA1E,CAAA,GAAMuE,GAAU,GACdA,IACT9D,EAAU8D,GAEZrE,KAAKyE,SAAS,CACZV,iBAAkB,CAChBC,UAAQI,IAAOC,GACfxC,SAAUA,GAAsB,WAChCtB,QAAS8D,EAAS9D,EAAU,uCAKxB,IACAwD,EAAqB/D,KAAK8D,MAA1BC,iBACR,OACEnD,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,KACIX,EAAiBC,QACjBpD,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CACE9C,SAAWkC,EAAiBlC,SAC5B+C,KAAOb,EAAiBxD,kBA1CLiB,IAAMC,WEf/BqB,SAAc,CAClBC,UAAU,YACVC,SAAS,WACTC,OAAO,SACPC,aAAa,eACbvB,OAAO,SACPwB,QAAQ,YCVK0B,cDcb,SAAAA,EAAYlE,GAAO,IAAA+C,EAAA,OAAA5D,OAAAC,EAAA,EAAAD,CAAAE,KAAA6E,IACjBnB,EAAA5D,OAAA6D,EAAA,EAAA7D,CAAAE,KAAAF,OAAA8D,EAAA,EAAA9D,CAAA+E,GAAAhB,KAAA7D,KAAMW,KAEDmD,MAAQ,CACXgB,UAAW,GACXC,UAAU,EACVC,WAAW,EACXC,kBAAmB,GACnBC,cAAe,IAGjBC,OAAOC,UAAY,CAAEC,cAAe,MACpC3B,EAAK4B,aAAe5B,EAAK4B,aAAapB,KAAlBpE,OAAAqE,EAAA,EAAArE,CAAA4D,IACpBA,EAAK6B,qBAAuB7B,EAAK6B,qBAAqBrB,KAA1BpE,OAAAqE,EAAA,EAAArE,CAAA4D,IAC5BA,EAAKoB,UAAYpB,EAAKoB,UAAUZ,KAAfpE,OAAAqE,EAAA,EAAArE,CAAA4D,IACjBA,EAAK8B,cAAgB9B,EAAK8B,cAActB,KAAnBpE,OAAAqE,EAAA,EAAArE,CAAA4D,IACrBA,EAAK+B,gBAAkB/B,EAAK+B,gBAAgBvB,KAArBpE,OAAAqE,EAAA,EAAArE,CAAA4D,IACvBA,EAAKgC,iBAAmBhC,EAAKgC,iBAAiBxB,KAAtBpE,OAAAqE,EAAA,EAAArE,CAAA4D,IACxBA,EAAKiC,gBAAkBjC,EAAKiC,gBAAgBzB,KAArBpE,OAAAqE,EAAA,EAAArE,CAAA4D,IAlBNA,yEAqBTkC,GACRT,OAAOC,UAAUC,cAAgBO,6CAGhB,IAAAC,EAAA7F,KACjBA,KAAKyE,SAAS,CACZS,cAAeC,OAAOC,UAAUC,cAAcS,eAAevF,QAAQwF,KAAKC,aAAaC,SACtF,WACD,OACEJ,EAAK/B,MAAMoB,qDAKJb,GAAQ,IAAA6B,EACclG,KAAK8D,MAA9BiB,EADWmB,EACXnB,SAAUC,EADCkB,EACDlB,UACdD,EACF/E,KAAKwF,gBACKR,GACVhF,KAAKyF,kBAEJnB,IAAEC,MAAMzB,EAAYuB,KACrBc,OAAOC,UAAUC,cAAcS,eAAeK,UAAUvB,KAAKwB,OAAO/B,GAAQgC,QAAQC,SACpFtG,KAAKyE,SAAS,CACZK,UAAWT,KAGfrE,KAAK0F,gEAGcnF,GAChBA,GACDP,KAAKyE,SAAS,CACZQ,kBAAmB1E,8CAKP,IACRuE,EAAc9E,KAAK8D,MAAnBgB,UACLR,IAAEC,MAAMzB,EAAYgC,KACrBK,OAAOC,UAAUC,cAAcS,eAAeK,UAAUvB,KAAKwB,OAAOtB,GAAWuB,QAAQE,UACvFvG,KAAKyE,SAAS,CACZK,UAAW,8CAMZK,OAAOC,WAAaD,OAAOC,UAAUC,gBAAyC,IAAxBrF,KAAK8D,MAAMiB,UAClE/E,KAAKyE,SAAS,CACZM,UAAU,IAEZI,OAAOC,UAAUC,cAAcS,eAAeK,UAAUJ,KAAKK,OAAOL,KAAKM,QAAQC,WAEjFtG,KAAKyE,SAAS,CACZM,UAAU,IAEZI,OAAOC,UAAUC,cAAcS,eAAeK,UAAUJ,KAAKK,OAAOL,KAAKM,QAAQE,qDAKhFpB,OAAOC,WAAaD,OAAOC,UAAUC,gBAA0C,IAAzBrF,KAAK8D,MAAMkB,WAClEhF,KAAKyE,SAAS,CACZO,WAAW,IAEbG,OAAOC,UAAUC,cAAcS,eAAeK,UAAUJ,KAAKK,OAAOI,OAAOH,QAAQC,WAEnFtG,KAAKyE,SAAS,CACZO,WAAW,IAEbG,OAAOC,UAAUC,cAAcS,eAAeK,UAAUJ,KAAKK,OAAOI,OAAOH,QAAQE,4CAI7E,IACDtB,EAAgCjF,KAAhCiF,kBAAmBH,EAAa9E,KAAb8E,UAC1B,OACElE,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,eACb3B,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,KACE9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CACE9C,SAAS,UACT4E,IAAK,SAAAC,GAAE,OAAI5B,EAAU4B,IACrB9B,KAAMK,aA1GMzD,IAAMC,WENxBkF,SAAmB,CACvBC,OAAQ,CAAC,UAAW,WACpBC,KAAM,KCTOC,cDab,SAAAA,EAAYnG,GAAO,IAAA+C,EAAA,OAAA5D,OAAAC,EAAA,EAAAD,CAAAE,KAAA8G,IACjBpD,EAAA5D,OAAA6D,EAAA,EAAA7D,CAAAE,KAAAF,OAAA8D,EAAA,EAAA9D,CAAAgH,GAAAjD,KAAA7D,KAAMW,KAEDoG,QAAUvF,IAAMwF,YACrBtD,EAAKuD,cAAgBzF,IAAMwF,YAE3BtD,EAAKI,MAAQ,CACX7B,SAAU,GACViF,SAAUP,GAGZjD,EAAKyD,YAAczD,EAAKyD,YAAYjD,KAAjBpE,OAAAqE,EAAA,EAAArE,CAAA4D,IACnBA,EAAK0D,YAAc1D,EAAK0D,YAAYlD,KAAjBpE,OAAAqE,EAAA,EAAArE,CAAA4D,IACnBA,EAAK2D,UAAY3D,EAAK2D,UAAUnD,KAAfpE,OAAAqE,EAAA,EAAArE,CAAA4D,IACjBA,EAAK4D,YAAc5D,EAAK4D,YAAYpD,KAAjBpE,OAAAqE,EAAA,EAAArE,CAAA4D,IAdFA,2EAiBPf,EAAIC,EAAIiE,GACflE,GAAOC,GAAOiE,GACf7G,KAAKyE,SAAS,CACZyC,SAAU,CACRN,OAAQ,CAACjE,EAAIC,GACbiE,KAAK,CAACA,0CAMF5E,GAAU,IAChBsF,EADgB1B,EAAA7F,KAEhBwH,EAAgBxH,KAAK8D,MAAM7B,SAC/BA,EAASE,IAAI,SAACsF,GAGZ,OAFAF,EAAa,IAAI3H,EAAW6H,GAC5BD,EAAgBA,EAAcE,OAAOH,KAGvCvH,KAAKyE,SAAS,CACZxC,SAAUuF,GACT,WACE3B,EAAKlF,MAAMgH,oBACZ9B,EAAKlF,MAAMgH,6DAKHC,GAAK,IACbC,EADaC,EAAA9H,KAEbwH,EAAgBxH,KAAK8D,MAAM7B,SAC5BuF,EAActF,OAAS,GACxBsF,EAAcrF,IAAI,SAACF,GAKjB,OAJGA,EAAS3B,MAAQ2B,EAAS3B,KAAKyH,QAAQH,IAAQ,IAChDC,EAAaL,EAAcO,QAAQ9F,GACnCuF,EAAcQ,OAAOH,EAAW,IAE3BL,IAGXxH,KAAKyE,SAAS,CACZxC,SAAUuF,GACT,WACEM,EAAKnH,MAAMgH,oBACZG,EAAKnH,MAAMgH,iEAKCxH,GAAI,IAChB0H,EADgBI,EAAAjI,KAEhBwH,EAAgBxH,KAAK8D,MAAM7B,SAC5BuF,EAActF,OAAS,GACxBsF,EAAcrF,IAAI,SAACF,GAKjB,OAJGA,EAAS9B,KAAOA,IACjB0H,EAAaL,EAAcO,QAAQ9F,GACnCuF,EAAcQ,OAAOH,EAAW,IAE3BL,IAGXxH,KAAKyE,SAAS,CACZxC,SAAUuF,GACT,WACES,EAAKtH,MAAMgH,oBACZM,EAAKtH,MAAMgH,2DAKLC,GAAK,IAAAM,EAAAlI,KACXwH,EAAgBxH,KAAK8D,MAAM7B,SAC5BuF,EAActF,OAAS,IACxBsF,EAAcrF,IAAI,SAACF,GAIjB,OAHGA,EAAS3B,MAAQ2B,EAAS3B,KAAKyH,QAAQH,IAAQ,IAChD3F,EAASK,QAASL,EAASK,QAEtBkF,IAETxH,KAAKyE,SAAS,CACZxC,SAAUuF,GACT,WACEU,EAAKvH,MAAMgH,oBACZO,EAAKvH,MAAMgH,gEAMHxH,GAAI,IAAAgI,EAAAnI,KACdwH,EAAgBxH,KAAK8D,MAAM7B,SAC5BuF,EAActF,OAAS,IACxBsF,EAAcrF,IAAI,SAACF,GAIjB,OAHGA,EAAS9B,KAAOA,IACjB8B,EAASK,QAASL,EAASK,QAEtBkF,IAETxH,KAAKyE,SAAS,CACZxC,SAAUuF,GACT,WACEW,EAAKxH,MAAMgH,oBACZQ,EAAKxH,MAAMgH,8DAOjB,OAAO3H,KAAK8D,MAAM7B,iDAGJ9B,GACd,IAAIiI,EACAZ,EAAgBxH,KAAK8D,MAAM7B,SAS/B,OARGuF,EAActF,OAAS,GACxBsF,EAAcrF,IAAI,SAACF,GAIjB,OAHGA,EAAS9B,KAAOA,IACjBiI,EAAUnG,GAELmG,IAGJA,2CAGQR,GACf,IAAIQ,EACAZ,EAAgBxH,KAAK8D,MAAM7B,SAS/B,OARGuF,EAActF,OAAS,GACxBsF,EAAcrF,IAAI,SAACF,GAIjB,OAHGA,EAAS3B,MAAQ2B,EAAS3B,KAAKyH,QAAQH,IAAQ,IAChDQ,EAAUnG,GAELmG,IAGJA,oCAGCzF,EAAIC,EAAId,GAChB,GAAGa,GAAOC,EAAK,CACb,IAAMjB,EAAS,CAAC,CACdxB,GAAIC,MACJC,KAAM,SACNC,KAAM,KACNC,QAAS,CAACuB,SACVtB,KAAM,CAACmC,MAAKC,SAEd5C,KAAKmH,YAAYxF,qCAIZ,IAAAuE,EACwBlG,KAAK8D,MAA5BoD,EADDhB,EACCgB,SAAUjF,EADXiE,EACWjE,SAClB,OACErB,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAKC,QAAQ,IAAIpB,SAAUA,EAAUqB,MAAO,CAAEC,MAAM,OAAQC,OAAQ,SAClE7H,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CACEC,IAAK3I,KAAKW,MAAMiI,UAAY5I,KAAKW,MAAMiI,UAAY,0CACnDC,YAAY,2EAEdjI,EAAAC,EAAAC,cAACgI,EAAD,CAAkBrC,IAAKzG,KAAKiH,gBAC5BrG,EAAAC,EAAAC,cAACiI,EAAD,CAAWtC,IAAKzG,KAAK+G,UACrBnG,EAAAC,EAAAC,cAACkI,EAAD,CACE/G,SAAUA,YAtLER,6BEXhBwH,EAAiB,CACrB,EAAE,QAAS,eAAgB,OAC3B,EAAE,cAAe,eAAgB,OACjC,EAAE,cAAe,eAAgB,OACjC,EAAE,cAAe,eAAgB,OACjC,EAAE,YAAa,eAAgB,QAC/B,EAAE,cAAe,eAAgB,QACjC,EAAE,YAAa,eAAgB,QAC/B,EAAE,cAAe,eAAgB,QACjC,EAAE,cAAe,eAAgB,QACjC,EAAE,cAAe,eAAgB,QACjC,EAAE,YAAa,aAAc,QAGzB1I,EAAU,CACd,CAAE2I,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,gBAAiBC,MAAO,iBACjC,CAAED,MAAO,SAAUC,MAAO,WClBbC,cDsBb,SAAAA,EAAYzI,GAAO,IAAA+C,EAAA,OAAA5D,OAAAC,EAAA,EAAAD,CAAAE,KAAAoJ,IACjB1F,EAAA5D,OAAA6D,EAAA,EAAA7D,CAAAE,KAAAF,OAAA8D,EAAA,EAAA9D,CAAAsJ,GAAAvF,KAAA7D,KAAMW,KAWR0I,aAAe,SAAAC,GACb5F,EAAKe,SAAS,CAAE6E,oBAVhB5F,EAAKI,MAAQ,CACXwF,eAAgB,KAChB5I,QAASuI,EACTM,aAAc,GACd5H,OAAQ,IAEV+B,EAAK8F,mBAAqB9F,EAAK8F,mBAAmBtF,KAAxBpE,OAAAqE,EAAA,EAAArE,CAAA4D,IATTA,kFAgBA+F,GACjB,IAAIP,EAAQO,EAAEC,OAAOR,MACjB1I,EAAO,GACPmJ,EAAe,GACfC,EAAS,EACb,GAAuB,MAApBV,EAAMW,OAAO,GACUC,KAAKC,MAAM,IAAMb,EAAQ,KAC/B/G,IAAI,SAACyD,GAOrB,OANA+D,EAAaK,KAAKpE,GACfgE,EAAS,IAAM,IAChBpJ,EAAKwJ,KAAKL,GACVA,EAAe,IAEjBC,GAAU,EACHpJ,SAEJ,GAAuB,MAApB0I,EAAMW,OAAO,GAAY,CACvBX,EAAMe,MAAM,SAClB9H,IAAI,SAACyD,GACP,GAAmB,MAAhBA,EAAEiE,OAAO,IAAejE,EAAEiE,OAAO,IAAM,KAAOjE,EAAEiE,OAAO,IAAM,IAAM,CACpE,IAAIK,EAAIJ,KAAKC,MAAM,IAAMnE,EAAI,KAC7BpF,EAAKwJ,KAAKE,GAEZ,OAAO1J,IAGXR,KAAKyE,SAAS,CACZ/D,QAASF,6CAKX,IAAI2J,EAAQnK,KAAK8D,MAAMyF,aAMvBY,EAAMH,KALO,CACXrH,IAAK,GACLC,IAAK,GACLd,MAAO,KAGT9B,KAAKyE,SAAS,CACZ8E,aAAcY,sCAIRV,EAAEpJ,GACVL,KAAKyE,SAAS,CACZ9C,OAAO7B,OAAAsK,EAAA,EAAAtK,CAAA,GACFE,KAAK8D,MAAMnC,OADV7B,OAAA0E,EAAA,EAAA1E,CAAA,GAEHO,EAAOoJ,EAAEC,OAAOR,iDAKRO,EAAEpJ,EAAKgC,GACpB,IAAI8H,EAAQnK,KAAK8D,MAAMyF,aACvBY,EAAM9H,GAAKhC,GAAQoJ,EAAEC,OAAOR,MAC5BlJ,KAAKyE,SAAS,CACZ8E,aAAcY,iDAIG,IAAAtE,EAAA7F,KAAAkG,EACuClG,KAAK8D,MAAvDwF,EADWpD,EACXoD,eAAgB5I,EADLwF,EACKxF,QAASiB,EADduE,EACcvE,OAAQ4H,EADtBrD,EACsBqD,aACzC,OAAQD,EAAeJ,OACrB,IAAK,UACH,OACEtI,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,WACb3B,EAAAC,EAAAC,cAAA,YAAUuJ,KAAK,UAAUnB,MAAOxI,EAAS4J,SAAUtK,KAAKwJ,mBAAoBe,KAAK,KAAKC,KAAK,QAGjG,IAAK,gBACH,OACE5J,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,iBACXgH,EAAapH,IAAI,SAACf,EAAEiB,GACpB,OACEzB,EAAAC,EAAAC,cAAA,OAAK0B,IAAG,UAAAkF,OAAYrF,GAAOE,UAAU,UACnC3B,EAAAC,EAAAC,cAAA,SAAOT,KAAK,OAAO6I,MAAO9H,EAAEuB,IAAK2H,SAAU,SAACb,GAAD,OAAO5D,EAAK4E,eAAehB,EAAE,MAAMpH,IAAMqI,YAAY,QAChG9J,EAAAC,EAAAC,cAAA,SAAOT,KAAK,OAAO6I,MAAO9H,EAAEwB,IAAK0H,SAAU,SAACb,GAAD,OAAO5D,EAAK4E,eAAehB,EAAE,MAAMpH,IAAMqI,YAAY,QAChG9J,EAAAC,EAAAC,cAAA,SAAOT,KAAK,OAAO6I,MAAO9H,EAAEU,MAAOwI,SAAU,SAACb,GAAD,OAAO5D,EAAK4E,eAAehB,EAAE,QAAQpH,IAAMqI,YAAY,mBAK1G9J,EAAAC,EAAAC,cAAA,UAAQyB,UAAU,gBAAgBoI,QAAS,kBAAM9E,EAAK+E,mBAAtD,eAGN,IAAK,SACH,OACEhK,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,UACb3B,EAAAC,EAAAC,cAAA,SAAOT,KAAK,OAAO6I,MAAOvH,EAAOgB,IAAK2H,SAAU,SAACb,GAAD,OAAO5D,EAAKgF,UAAUpB,EAAE,QAAQiB,YAAY,QAC5F9J,EAAAC,EAAAC,cAAA,SAAOT,KAAK,OAAO6I,MAAOvH,EAAOiB,IAAK0H,SAAU,SAACb,GAAD,OAAO5D,EAAKgF,UAAUpB,EAAE,QAAQiB,YAAY,QAC5F9J,EAAAC,EAAAC,cAAA,SAAOT,KAAK,OAAO6I,MAAOvH,EAAOG,MAAOwI,SAAU,SAACb,GAAD,OAAO5D,EAAKgF,UAAUpB,EAAE,UAAUiB,YAAY,2DAOzF,IAAAI,EAC4C9K,KAAK8D,MAAxDwF,EADOwB,EACPxB,eAAgB5I,EADToK,EACSpK,QAASiB,EADlBmJ,EACkBnJ,OAAQ4H,EAD1BuB,EAC0BvB,aACzC,GAA4B,YAAzBD,EAAeJ,MAAqB,CACrC,IAAI1I,EAAO,CAAC,CACVH,KAAM,UACNG,KAAME,IAELA,GACDV,KAAKW,MAAMoK,QAAQC,QAAQ7D,YAAY3G,QAEpC,GAA4B,kBAAzB8I,EAAeJ,MAA2B,CAClD,IAAI1I,EAAO,CAAC,CACVH,KAAM,gBACNG,KAAM+I,IAELA,GACDvJ,KAAKW,MAAMoK,QAAQC,QAAQ7D,YAAY3G,OAER,WAAzB8I,EAAeJ,OACpBvH,EAAOgB,KAAOhB,EAAOiB,KACtB5C,KAAKW,MAAMoK,QAAQC,QAAQ3D,UAAU1F,EAAOgB,IAAIhB,EAAOiB,IAAIjB,EAAOG,wCAK/D,IAAAgG,EAAA9H,KACCsJ,EAAmBtJ,KAAK8D,MAAxBwF,eACR,OACE1I,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,aACb3B,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CACE1I,UAAU,SACV2I,gBAAgB,SAChBhC,MAAOI,EACPgB,SAAUtK,KAAKqJ,aACf9I,QAASA,IAET+I,GAAkBA,EAAeJ,OACjClJ,KAAKmL,qBAEL7B,GAAkBA,EAAeJ,MACjCtI,EAAAC,EAAAC,cAAA,UAASyB,UAAU,mBAAmBoI,QAAS,WAAO7C,EAAKsD,mBAA3D,UACAxK,EAAAC,EAAAC,cAAA,UAAQyB,UAAU,oBAAoB8I,UAAQ,GAA9C,kBA7JY5J,aErBP6J,SCCO,SAAC3K,GACrB,OACEC,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,mBACb3B,EAAAC,EAAAC,cAAA,UAAQ6J,QAAS,kBAAMhK,EAAMoK,QAAQC,QAAQjE,QAAQiE,QAAQ1F,aAAa,cAA1E,iBACA1E,EAAAC,EAAAC,cAAA,UAAQ6J,QAAS,kBAAMhK,EAAMoK,QAAQC,QAAQjE,QAAQiE,QAAQ1F,aAAa,aAA1E,gBACA1E,EAAAC,EAAAC,cAAA,UAAQ6J,QAAS,kBAAMhK,EAAMoK,QAAQC,QAAQjE,QAAQiE,QAAQ1F,aAAa,eAA1E,kBACA1E,EAAAC,EAAAC,cAAA,UAAQ6J,QAAS,kBAAMhK,EAAMoK,QAAQC,QAAQjE,QAAQiE,QAAQ1F,aAAa,YAA1E,eACA1E,EAAAC,EAAAC,cAAA,UAAQ6J,QAAS,kBAAMhK,EAAMoK,QAAQC,QAAQjE,QAAQiE,QAAQxF,kBAA7D,QACA5E,EAAAC,EAAAC,cAAA,UAAQ6J,QAAS,kBAAMhK,EAAMoK,QAAQC,QAAQjE,QAAQiE,QAAQvF,oBAA7D,aCTS8F,cCEb,SAAAA,EAAY5K,GAAO,IAAA+C,EAAA,OAAA5D,OAAAC,EAAA,EAAAD,CAAAE,KAAAuL,IACjB7H,EAAA5D,OAAA6D,EAAA,EAAA7D,CAAAE,KAAAF,OAAA8D,EAAA,EAAA9D,CAAAyL,GAAA1H,KAAA7D,KAAMW,KAeR0I,aAAe,SAAAC,GACb5F,EAAKe,SAAS,CAAE6E,oBAdhB5F,EAAKI,MAAQ,CACXwF,eAAgB,KAChBkC,MAAM,EACNjL,QAAS,IANMmD,yFAUO+H,GACrBA,EAAUxJ,UACXjC,KAAK0L,cAAcD,EAAUxJ,gDAQnBA,GACZ,IAAI1B,EAAU,GACd0B,EAASE,IAAI,SAACiG,GAEZ,OADA7H,EAAQyJ,KAAK,CAAEd,MAAOd,EAAQjI,GAAIgJ,MAAOf,EAAQjI,KAC1CI,IAETP,KAAKyE,SAAS,CACZlE,QAASA,iDAKXP,KAAKW,MAAMoK,QAAQY,gBAAgB3L,KAAK8D,MAAMwF,eAAeJ,OAC7DlJ,KAAKyE,SAAS,CACZ+G,MAAOxL,KAAK8D,MAAM0H,wCAIb,IAAA3F,EAAA7F,KAAAkG,EAC6BlG,KAAK8D,MAAjCwF,EADDpD,EACCoD,eAAgB/I,EADjB2F,EACiB3F,QACxB,OACEK,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,kBACb3B,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CACE1I,UAAU,SACV2I,gBAAgB,SAChBhC,MAAOI,EACPgB,SAAUtK,KAAKqJ,aACf9I,QAASA,IAET+I,GAAkBA,EAAeJ,MACjCtI,EAAAC,EAAAC,cAAA,UAASyB,UAAU,mBAAmBoI,QAAS,WAAO9E,EAAK+F,uBAA3D,UACAhL,EAAAC,EAAAC,cAAA,UAAQyB,UAAU,oBAAoB8I,UAAQ,GAA9C,kBArDiB5J,aCDZoK,cCEb,SAAAA,EAAYlL,GAAO,IAAA+C,EAAA,OAAA5D,OAAAC,EAAA,EAAAD,CAAAE,KAAA6L,IACjBnI,EAAA5D,OAAA6D,EAAA,EAAA7D,CAAAE,KAAAF,OAAA8D,EAAA,EAAA9D,CAAA+L,GAAAhI,KAAA7D,KAAMW,KAcR0I,aAAe,SAAAC,GACb5F,EAAKe,SAAS,CAAE6E,oBAbhB5F,EAAKI,MAAQ,CACXwF,eAAgB,KAChB/I,QAAS,IALMmD,yFASO+H,GACrBA,EAAUxJ,UACXjC,KAAK8L,gBAAgBL,EAAUxJ,kDAQnBA,GACd,IAAI1B,EAAU,GACd0B,EAASE,IAAI,SAACiG,GAEZ,OADA7H,EAAQyJ,KAAK,CAAEd,MAAOd,EAAQjI,GAAIgJ,MAAOf,EAAQjI,KAC1CI,IAETP,KAAKyE,SAAS,CACZlE,QAASA,mDAIU,IAAA2F,EACelG,KAAK8D,MAAjCwF,EADapD,EACboD,eAAgB/I,EADH2F,EACG3F,QACxBP,KAAKW,MAAMoK,QAAQgB,kBAAkBzC,EAAeJ,OACpD,IAAI8C,EAAazL,EACb0L,EAAQD,EAAWjE,QAAQuB,EAAeJ,OAC9C8C,EAAWhE,OAAOiE,EAAM,GACxBjM,KAAKyE,SAAS,CACZ6E,eAAgB,KAChB/I,QAASyL,qCAIJ,IAAAnG,EAAA7F,KAAA8K,EAC6B9K,KAAK8D,MAAjCvD,EADDuK,EACCvK,QAAS+I,EADVwB,EACUxB,eACjB,OACE1I,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,gBACb3B,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CACE1I,UAAU,SACV2I,gBAAgB,SAChBhC,MAAOI,EACPgB,SAAUtK,KAAKqJ,aACf9I,QAASA,IAET+I,GAAkBA,EAAeJ,MACjCtI,EAAAC,EAAAC,cAAA,UAASyB,UAAU,mBAAmBoI,QAAS,WAAO9E,EAAKqG,yBAA3D,UACAtL,EAAAC,EAAAC,cAAA,UAAQyB,UAAU,oBAAoB8I,UAAQ,GAA9C,kBAzDe5J,aCkGV0K,cA7Db,SAAAA,EAAYxL,GAAO,IAAA+C,EAAA,OAAA5D,OAAAC,EAAA,EAAAD,CAAAE,KAAAmM,IACjBzI,EAAA5D,OAAA6D,EAAA,EAAA7D,CAAAE,KAAAF,OAAA8D,EAAA,EAAA9D,CAAAqM,GAAAtI,KAAA7D,KAAMW,KACDmD,MAAQ,CACXsI,UAAU,EACVnK,SAAU,IAEZyB,EAAKiE,mBAAqBjE,EAAKiE,mBAAmBzD,KAAxBpE,OAAAqE,EAAA,EAAArE,CAAA4D,IAC1BA,EAAKqH,QAAUvJ,IAAMwF,YAPJtD,mFAWd1D,KAAK+K,QAAQC,SACdhL,KAAKyE,SAAS,CACZ2H,UAAWpM,KAAK8D,MAAMsI,WAG1BpM,KAAK+K,QAAQC,QAAQ3D,UAAU,YAAa,YAAY,+FAGxD,OACEzG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuL,EAAD,CACEtB,QAAS/K,KAAK+K,QAAQC,QACtB/I,SAAUjC,KAAK8D,MAAM7B,WAEvBrB,EAAAC,EAAAC,cAACwL,EAAD,CACEvB,QAAS/K,KAAK+K,QAAQC,QACtB/I,SAAUjC,KAAK8D,MAAM7B,yDAO3B,IAAIA,EAAWjC,KAAK+K,QAAQC,QAAQ1D,cACpCtH,KAAKyE,SAAS,CACZxC,SAAUA,qCAKZ,OACErB,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,OACb3B,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACyL,EAAD,CACExB,QAAS/K,KAAK+K,UAEhBnK,EAAAC,EAAAC,cAAA,OAAKyH,MAAO,CAAEC,MAAO,OAAQC,OAAQ,UACnC7H,EAAAC,EAAAC,cAAC0L,EAAD,CAAS/F,IAAKzG,KAAK+K,QAASpD,mBAAoB3H,KAAK2H,sBAEvD/G,EAAAC,EAAAC,cAAC2L,EAAD,CACE1B,QAAS/K,KAAK+K,UAEd/K,KAAK8D,MAAMsI,UACXpM,KAAK0M,oCAvDGjL,aC3BEkL,QACW,cAA7BxH,OAAOyH,SAASC,UAEe,UAA7B1H,OAAOyH,SAASC,UAEhB1H,OAAOyH,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpM,EAAAC,EAAAC,cAACmM,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.dbb9b093.chunk.js","sourcesContent":["/*\r\n *\r\n */\r\nimport uuid from 'uuidv4'\r\n\r\nexport default class MapElement {\r\n  constructor(params) {\r\n    const properties = Object.assign({\r\n      // these are the defaults\r\n      id: uuid(),\r\n      type: null,\r\n      tags: null,\r\n      options: null,\r\n      data: null,\r\n    }, params)\r\n\r\n    this.id = properties.id\r\n    this.type = properties.type\r\n    this.tags = properties.tags\r\n    this.options = properties.options\r\n    this.data = properties.data\r\n  }\r\n}\r\n","import Heatmap from './Heatmap'\r\n\r\nexport default Heatmap\r\n","import React from 'react'\r\nimport HeatmapLayer from 'react-leaflet-heatmap-layer'\r\n\r\nclass Heatmap extends React.Component {\r\n  render () {\r\n    const { heatmap } = this.props\r\n    return (\r\n      <HeatmapLayer\r\n        fitBoundsOnLoad\r\n        fitBoundsOnUpdate\r\n        points={heatmap.data}\r\n        longitudeExtractor={m => m[1]}\r\n        latitudeExtractor={m => m[0]}\r\n        intensityExtractor={m => parseFloat(m[2])}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Heatmap\r\n","import MapMarker from './MapMarker'\r\n\r\nexport default MapMarker\r\n","import React from 'react'\r\nimport { Marker, Popup } from 'react-leaflet'\r\n\r\nconst MapMarker = (props) => {\r\n  const { marker } = props\r\n  return (\r\n    <Marker id={marker.id} position={marker.position}>\r\n      { marker.popup &&\r\n        <Popup>\r\n          {marker.popup}\r\n        </Popup>\r\n      }\r\n    </Marker>\r\n  )\r\n}\r\n\r\nexport default MapMarker\r\n","import MapElements from './MapElements'\r\n\r\nexport default MapElements\r\n","import React, { Component } from 'react'\r\nimport uuid from 'uuidv4'\r\nimport Heatmap from '../Heatmaps'\r\nimport MapMarker from '../MapMarker'\r\n\r\nclass MapElements extends Component {\r\n\r\n  getMapElements() {\r\n    const { elements } = this.props\r\n    if( elements.length > 0 ) {\r\n      return(\r\n        elements.map((mapObject, idx) => {\r\n          if(!mapObject.hidden) {\r\n            if(mapObject.type === 'heatmap') {\r\n              return (\r\n                <div className='heatmap__element' key={uuid()}>\r\n                  <Heatmap\r\n                    heatmap={mapObject}\r\n                    />\r\n                </div>\r\n              )\r\n            } else if(mapObject.type === 'group_markers') {\r\n              return (\r\n                mapObject.data.map((data) => (\r\n                  <div className='marker__element' key={uuid()}>\r\n                    <MapMarker\r\n                      marker={{\r\n                        id: mapObject.id,\r\n                        position: {lat:data.lat,lng:data.lng},\r\n                        popup: data && data.popup ? data.popup : '',\r\n                      }}\r\n                      />\r\n                  </div>\r\n                ))\r\n              )\r\n            } else if(mapObject.type === 'marker') {\r\n              return (\r\n                <div className='marker__element' key={uuid()}>\r\n                  <MapMarker\r\n                    marker={{\r\n                      id: mapObject.id,\r\n                      position: {lat:mapObject.data.lat,lng:mapObject.data.lng},\r\n                      popup: mapObject.options && mapObject.options.popup ? mapObject.options.popup : '',\r\n                    }}\r\n                    />\r\n                </div>\r\n              )\r\n            }\r\n          }\r\n          return idx\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        { this.getMapElements() }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapElements\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\nimport { FeatureGroup } from 'react-leaflet'\r\nimport { EditControl } from 'react-leaflet-draw'\r\n\r\nconst DRAW_OPTION = {\r\n  rectangle:'rectangle',\r\n  polyline:'polyline',\r\n  circle:'circle',\r\n  circlemarker:'circlemarker',\r\n  marker:'marker',\r\n  polygon:'polygon'\r\n}\r\n\r\nconst DRAW_MENU_POSITION = {\r\n  topleft:'topleft',\r\n  topright:'topright',\r\n  bottomright:'bottomright',\r\n  bottomleft:'bottomleft'\r\n}\r\n\r\nclass MapLeafletDrawer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      mapLeafletDrawer: {\r\n        active: false,\r\n        position: 'topright',\r\n        options: {},\r\n      },\r\n    }\r\n\r\n    this.setMapLeafletDrawer = this.setMapLeafletDrawer.bind(this)\r\n  }\r\n\r\n  setMapLeafletDrawer(pos,option) {\r\n    let position = null\r\n    let options = null\r\n    if(_.hasIn(DRAW_MENU_POSITION,pos)) {\r\n      position = pos\r\n    }\r\n    if(_.hasIn(DRAW_OPTION,option)) {\r\n      options = { [option] : false }\r\n    } else if (option) {\r\n      options = option\r\n    }\r\n    this.setState({\r\n      mapLeafletDrawer: {\r\n        active: pos || option ? true : false,\r\n        position: position ? position : 'topright',\r\n        options: option ? options : {}\r\n      }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { mapLeafletDrawer } = this.state\r\n    return (\r\n      <FeatureGroup>\r\n        { mapLeafletDrawer.active &&\r\n          <EditControl\r\n            position={ mapLeafletDrawer.position }\r\n            draw={ mapLeafletDrawer.options }\r\n          />\r\n        }\r\n      </FeatureGroup>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapLeafletDrawer\r\n","import MapLeafletDrawer from './MapLeafletDrawer'\r\n\r\nexport default MapLeafletDrawer\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\nimport { EditControl } from 'react-leaflet-draw'\r\nimport { FeatureGroup } from 'react-leaflet'\r\nimport './MapDrawer.scss'\r\n\r\nconst DRAW_OPTION = {\r\n  rectangle:'rectangle',\r\n  polyline:'polyline',\r\n  circle:'circle',\r\n  circlemarker:'circlemarker',\r\n  marker:'marker',\r\n  polygon:'polygon'\r\n}\r\n\r\nclass MapDrawer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      mapDrawer: '',\r\n      editable: false,\r\n      removable: false,\r\n      mapDrawerSettings: {},\r\n      mapDrawerData: {},\r\n    }\r\n\r\n    window.react_map = { _mapDrawerRef: null }\r\n    this.setMapDrawer = this.setMapDrawer.bind(this)\r\n    this.setMapDrawerSettings = this.setMapDrawerSettings.bind(this)\r\n    this.mapDrawer = this.mapDrawer.bind(this)\r\n    this.editMapDrawer = this.editMapDrawer.bind(this)\r\n    this.removeMapDrawer = this.removeMapDrawer.bind(this)\r\n    this.getMapDrawerData = this.getMapDrawerData.bind(this)\r\n    this.cancelMapDrawer = this.cancelMapDrawer.bind(this)\r\n  }\r\n\r\n  mapDrawer(x) {\r\n    window.react_map._mapDrawerRef = x\r\n  }\r\n\r\n  getMapDrawerData() {\r\n    this.setState({\r\n      mapDrawerData: window.react_map._mapDrawerRef.leafletElement.options.edit.featureGroup._layers\r\n    }, () => {\r\n      return (\r\n        this.state.mapDrawerData\r\n      )\r\n    })\r\n  }\r\n\r\n  setMapDrawer(option) {\r\n    const { editable, removable, } = this.state\r\n    if( editable ) {\r\n      this.editMapDrawer()\r\n    } else if ( removable ) {\r\n      this.removeMapDrawer()\r\n    }\r\n    if(_.hasIn(DRAW_OPTION,option)) {\r\n      window.react_map._mapDrawerRef.leafletElement._toolbars.draw._modes[option].handler.enable()\r\n      this.setState({\r\n        mapDrawer: option\r\n      })\r\n    }\r\n    this.getMapDrawerData()\r\n  }\r\n\r\n  setMapDrawerSettings(options) {\r\n    if(options) {\r\n      this.setState({\r\n        mapDrawerSettings: options\r\n      })\r\n    }\r\n  }\r\n\r\n  cancelMapDrawer() {\r\n    const { mapDrawer } = this.state\r\n    if(_.hasIn(DRAW_OPTION,mapDrawer)) {\r\n      window.react_map._mapDrawerRef.leafletElement._toolbars.draw._modes[mapDrawer].handler.disable()\r\n      this.setState({\r\n        mapDrawer: '',\r\n      })\r\n    }\r\n  }\r\n\r\n  editMapDrawer() {\r\n    if(window.react_map && window.react_map._mapDrawerRef && this.state.editable === false) {\r\n      this.setState({\r\n        editable: true\r\n      })\r\n      window.react_map._mapDrawerRef.leafletElement._toolbars.edit._modes.edit.handler.enable()\r\n    } else {\r\n      this.setState({\r\n        editable: false\r\n      })\r\n      window.react_map._mapDrawerRef.leafletElement._toolbars.edit._modes.edit.handler.disable()\r\n    }\r\n  }\r\n\r\n  removeMapDrawer() {\r\n    if(window.react_map && window.react_map._mapDrawerRef && this.state.removable === false) {\r\n      this.setState({\r\n        removable: true\r\n      })\r\n      window.react_map._mapDrawerRef.leafletElement._toolbars.edit._modes.remove.handler.enable()\r\n    } else {\r\n      this.setState({\r\n        removable: false\r\n      })\r\n      window.react_map._mapDrawerRef.leafletElement._toolbars.edit._modes.remove.handler.disable()\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {mapDrawerSettings, mapDrawer} = this\r\n    return (\r\n      <div className='custom__map'>\r\n        <FeatureGroup>\r\n          <EditControl\r\n            position='topleft'\r\n            ref={el => mapDrawer(el)}\r\n            draw={mapDrawerSettings}\r\n            />\r\n        </FeatureGroup>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapDrawer\r\n","import MapDrawer from './MapDrawer'\r\n\r\nexport default MapDrawer\r\n","import React, { Component } from 'react'\r\nimport { Map, TileLayer } from 'react-leaflet'\r\nimport uuid from 'uuidv4'\r\nimport MapElement from './models/MapElement'\r\nimport MapElements from './components/MapElements'\r\nimport MapLeafletDrawer from './components/MapLeafletDrawer'\r\nimport MapDrawer from './components/MapDrawer'\r\nimport './AltaMap.scss'\r\n\r\nconst DEFAULT_VIEWPORT = {\r\n  center: [50.270908, 19.039993],\r\n  zoom: 13,\r\n}\r\n\r\nclass AltaMap extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.drawRef = React.createRef()\r\n    this.leafletDrawer = React.createRef()\r\n\r\n    this.state = {\r\n      elements: [],\r\n      viewport: DEFAULT_VIEWPORT,\r\n    }\r\n\r\n    this.addElements = this.addElements.bind(this)\r\n    this.setViewport = this.setViewport.bind(this)\r\n    this.addMarker = this.addMarker.bind(this)\r\n    this.getElements = this.getElements.bind(this)\r\n  }\r\n\r\n  setViewport(lat,lng,zoom) {\r\n    if(lat && lng && zoom){\r\n      this.setState({\r\n        viewport: {\r\n          center: [lat,lng],\r\n          zoom:[zoom]\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  addElements(elements) {\r\n    let mapElement\r\n    let elementsArray = this.state.elements\r\n    elements.map((me) => {\r\n      mapElement = new MapElement(me)\r\n      elementsArray = elementsArray.concat(mapElement)\r\n      return elementsArray\r\n    })\r\n    this.setState({\r\n      elements: elementsArray\r\n    }, () => {\r\n      if(this.props.updateAltaMapState){\r\n        this.props.updateAltaMapState()\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteElement(tag) {\r\n    let deleteItem\r\n    let elementsArray = this.state.elements\r\n    if(elementsArray.length > 0) {\r\n      elementsArray.map((elements) => {\r\n        if(elements.tags && elements.tags.indexOf(tag) > -1) {\r\n          deleteItem = elementsArray.indexOf(elements)\r\n          elementsArray.splice(deleteItem,1)\r\n        }\r\n        return elementsArray\r\n      })\r\n    }\r\n    this.setState({\r\n      elements: elementsArray\r\n    }, () => {\r\n      if(this.props.updateAltaMapState){\r\n        this.props.updateAltaMapState()\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteElementById(id) {\r\n    let deleteItem\r\n    let elementsArray = this.state.elements\r\n    if(elementsArray.length > 0) {\r\n      elementsArray.map((elements) => {\r\n        if(elements.id === id) {\r\n          deleteItem = elementsArray.indexOf(elements)\r\n          elementsArray.splice(deleteItem,1)\r\n        }\r\n        return elementsArray\r\n      })\r\n    }\r\n    this.setState({\r\n      elements: elementsArray\r\n    }, () => {\r\n      if(this.props.updateAltaMapState){\r\n        this.props.updateAltaMapState()\r\n      }\r\n    })\r\n  }\r\n\r\n  hideElement(tag) {\r\n    let elementsArray = this.state.elements\r\n    if(elementsArray.length > 0) {\r\n      elementsArray.map((elements) => {\r\n        if(elements.tags && elements.tags.indexOf(tag) > -1) {\r\n          elements.hidden = elements.hidden ? false : true\r\n        }\r\n        return elementsArray\r\n      })\r\n      this.setState({\r\n        elements: elementsArray\r\n      }, () => {\r\n        if(this.props.updateAltaMapState){\r\n          this.props.updateAltaMapState()\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  hideElementById(id) {\r\n    let elementsArray = this.state.elements\r\n    if(elementsArray.length > 0) {\r\n      elementsArray.map((elements) => {\r\n        if(elements.id === id) {\r\n          elements.hidden = elements.hidden ? false : true\r\n        }\r\n        return elementsArray\r\n      })\r\n      this.setState({\r\n        elements: elementsArray\r\n      }, () => {\r\n        if(this.props.updateAltaMapState){\r\n          this.props.updateAltaMapState()\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  getElements() {\r\n    return this.state.elements\r\n  }\r\n\r\n  getElementsById(id) {\r\n    let element\r\n    let elementsArray = this.state.elements\r\n    if(elementsArray.length > 0) {\r\n      elementsArray.map((elements) => {\r\n        if(elements.id === id) {\r\n          element = elements\r\n        }\r\n        return element\r\n      })\r\n    }\r\n    return element\r\n  }\r\n\r\n  getElementsByTag(tag) {\r\n    let element\r\n    let elementsArray = this.state.elements\r\n    if(elementsArray.length > 0) {\r\n      elementsArray.map((elements) => {\r\n        if(elements.tags && elements.tags.indexOf(tag) > -1) {\r\n          element = elements\r\n        }\r\n        return element\r\n      })\r\n    }\r\n    return element\r\n  }\r\n\r\n  addMarker(lat,lng,popup) {\r\n    if(lat && lng) {\r\n      const marker = [{\r\n        id: uuid(),\r\n        type: 'marker',\r\n        tags: null,\r\n        options: {popup},\r\n        data: {lat, lng},\r\n      }]\r\n      this.addElements(marker)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { viewport, elements } = this.state\r\n    return (\r\n      <Map minZoom='4' viewport={viewport} style={{ width:'100%', height: '100%' }}>\r\n        <TileLayer\r\n          url={this.props.tileLayer ? this.props.tileLayer : 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'}\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        <MapLeafletDrawer ref={this.leafletDrawer} />\r\n        <MapDrawer ref={this.drawRef} />\r\n        <MapElements\r\n          elements={elements}\r\n        />\r\n      </Map>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AltaMap\r\n","import AltaMap from './AltaMap'\r\n\r\nexport default AltaMap\r\n","import React, { Component } from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst ADDRESS_POINTS = [\r\n  [-37.8839, 175.3657417333, \"571\"],\r\n  [-37.8869090667, 175.3657417333, \"486\"],\r\n  [-37.8894207167, 175.4015351167, \"807\"],\r\n  [-37.8927369333, 175.4087452333, \"899\"],\r\n  [-37.90585105, 175.4453463833, \"1273\"],\r\n  [-37.9064188833, 175.4441556833, \"1258\"],\r\n  [-37.90584715, 175.4463564333, \"1279\"],\r\n  [-37.9033391333, 175.4244005667, \"1078\"],\r\n  [-37.9061991333, 175.4492620333, \"1309\"],\r\n  [-37.9058955167, 175.4445613167, \"1261\"],\r\n  [-37.88888045, 175.39146475, \"734\"],\r\n]\r\n\r\nconst options = [\r\n  { value: 'heatmap', label: 'Heatmap' },\r\n  { value: 'group_markers', label: 'Markers Group' },\r\n  { value: 'marker', label: 'Marker' },\r\n];\r\n\r\nclass AddData extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      selectedOption: null,\r\n      heatmap: ADDRESS_POINTS,\r\n      groupMarkers: [],\r\n      marker: {}\r\n    }\r\n    this.updateHeatmapValue = this.updateHeatmapValue.bind(this)\r\n  }\r\n\r\n  handleChange = selectedOption => {\r\n    this.setState({ selectedOption })\r\n  }\r\n\r\n  updateHeatmapValue(e) {\r\n    let value = e.target.value\r\n    let data = []\r\n    let elementArray = []\r\n    let number = 1\r\n    if(value.charAt(0) !== '[') {\r\n      let heatmapValueArray = JSON.parse('[' + value + ']')\r\n      heatmapValueArray.map((x) => {\r\n        elementArray.push(x)\r\n        if(number % 3 === 0){\r\n          data.push(elementArray)\r\n          elementArray = []\r\n        }\r\n        number += 1\r\n        return data\r\n      })\r\n    } else if(value.charAt(0) === '[') {\r\n      var res = value.split(/[[\\]]/)\r\n      res.map((x) => {\r\n        if(x.charAt(0) === '-' || (x.charAt(0) >= '0' && x.charAt(0) <= '9')) {\r\n          let y = JSON.parse('[' + x + ']')\r\n          data.push(y)\r\n        }\r\n        return data\r\n      })\r\n    }\r\n    this.setState({\r\n      heatmap: data\r\n    })\r\n  }\r\n\r\n  addGroupMarker() {\r\n    let group = this.state.groupMarkers\r\n    let marker = {\r\n      lat: '',\r\n      lng: '',\r\n      popup: '',\r\n    }\r\n    group.push(marker)\r\n    this.setState({\r\n      groupMarkers: group\r\n    })\r\n  }\r\n\r\n  setMarker(e,type) {\r\n    this.setState({\r\n      marker: {\r\n        ...this.state.marker,\r\n        [type]: e.target.value\r\n      }\r\n    })\r\n  }\r\n\r\n  setGroupMarker(e,type,idx) {\r\n    let group = this.state.groupMarkers\r\n    group[idx][type] = e.target.value\r\n    this.setState({\r\n      groupMarkers: group\r\n    })\r\n  }\r\n\r\n  getOptionComponent() {\r\n    const { selectedOption, heatmap, marker, groupMarkers } = this.state\r\n    switch (selectedOption.value) {\r\n      case 'heatmap':\r\n        return (\r\n          <div className='heatmap'>\r\n            <textarea name=\"message\" value={heatmap} onChange={this.updateHeatmapValue} rows=\"10\" cols=\"30\"></textarea>\r\n          </div>\r\n        )\r\n      case 'group_markers':\r\n        return (\r\n          <div className='group_markers'>\r\n            { groupMarkers.map((m,idx) => {\r\n              return (\r\n                <div key={`marker-${idx}`} className='marker'>\r\n                  <input type=\"text\" value={m.lat} onChange={(e) => this.setGroupMarker(e,'lat',idx)} placeholder='Lat'></input>\r\n                  <input type=\"text\" value={m.lng} onChange={(e) => this.setGroupMarker(e,'lng',idx)} placeholder='Lng'></input>\r\n                  <input type=\"text\" value={m.popup} onChange={(e) => this.setGroupMarker(e,'popup',idx)} placeholder='Text marker'></input>\r\n                </div>\r\n              )\r\n            })\r\n            }\r\n            <button className='btn btn--text' onClick={() => this.addGroupMarker()}>Add marker</button>\r\n          </div>\r\n        )\r\n      case 'marker':\r\n        return (\r\n          <div className='marker'>\r\n            <input type=\"text\" value={marker.lat} onChange={(e) => this.setMarker(e,'lat')} placeholder='Lat'></input>\r\n            <input type=\"text\" value={marker.lng} onChange={(e) => this.setMarker(e,'lng')} placeholder='Lng'></input>\r\n            <input type=\"text\" value={marker.popup} onChange={(e) => this.setMarker(e,'popup')} placeholder='Text marker'></input>\r\n          </div>\r\n        )\r\n      default:\r\n    }\r\n  }\r\n\r\n  confirmAddData() {\r\n    const { selectedOption, heatmap, marker, groupMarkers, } = this.state\r\n    if(selectedOption.value === 'heatmap') {\r\n      let data = [{\r\n        type: 'heatmap',\r\n        data: heatmap\r\n      }]\r\n      if(heatmap) {\r\n        this.props.altaRef.current.addElements(data)\r\n      }\r\n    } else if(selectedOption.value === 'group_markers') {\r\n      let data = [{\r\n        type: 'group_markers',\r\n        data: groupMarkers\r\n      }]\r\n      if(groupMarkers) {\r\n        this.props.altaRef.current.addElements(data)\r\n      }\r\n    } else if(selectedOption.value === 'marker') {\r\n      if(marker.lat && marker.lng) {\r\n        this.props.altaRef.current.addMarker(marker.lat,marker.lng,marker.popup)\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { selectedOption } = this.state\r\n    return (\r\n      <div className='add__data'>\r\n        <h2>Add Element</h2>\r\n        <Select\r\n          className='select'\r\n          classNamePrefix='select'\r\n          value={selectedOption}\r\n          onChange={this.handleChange}\r\n          options={options}\r\n        />\r\n        { selectedOption && selectedOption.value &&\r\n          this.getOptionComponent()\r\n        }\r\n        { selectedOption && selectedOption.value ?\r\n          <button  className='btn btn--primary' onClick={() => {this.confirmAddData()}}>Submit</button> :\r\n          <button className='btn btn--disabled' disabled>Submit</button>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddData\r\n","import AddData from './AddData'\r\n\r\nexport default AddData\r\n","import DrawerControl from './DrawerControl'\r\n\r\nexport default DrawerControl\r\n","import React from 'react'\r\nimport './DrawerControl.scss'\r\n\r\nconst DrawerControl = (props) => {\r\n  return (\r\n    <div className='drawer__control'>\r\n      <button onClick={() => props.altaRef.current.drawRef.current.setMapDrawer('polyline')}>Draw Polyline</button>\r\n      <button onClick={() => props.altaRef.current.drawRef.current.setMapDrawer('polygon')}>Draw Polygon</button>\r\n      <button onClick={() => props.altaRef.current.drawRef.current.setMapDrawer('rectangle')}>Draw Rectangle</button>\r\n      <button onClick={() => props.altaRef.current.drawRef.current.setMapDrawer('circle')}>Draw Circle</button>\r\n      <button onClick={() => props.altaRef.current.drawRef.current.editMapDrawer()}>Edit</button>\r\n      <button onClick={() => props.altaRef.current.drawRef.current.removeMapDrawer()}>Remove</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DrawerControl\r\n","import HideElements from './HideElements'\r\n\r\nexport default HideElements\r\n","import React, { Component } from 'react'\r\nimport Select from 'react-select'\r\n\r\nclass HideElements extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      selectedOption: null,\r\n      hide: false,\r\n      options: []\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.elements){\r\n      this.setHideOption(nextProps.elements)\r\n    }\r\n  }\r\n\r\n  handleChange = selectedOption => {\r\n    this.setState({ selectedOption })\r\n  }\r\n\r\n  setHideOption(elements) {\r\n    let options = []\r\n    elements.map((element) => {\r\n      options.push({ value: element.id, label: element.id })\r\n      return options\r\n    })\r\n    this.setState({\r\n      options: options\r\n    })\r\n  }\r\n\r\n  confirmHideElement() {\r\n    this.props.altaRef.hideElementById(this.state.selectedOption.value)\r\n    this.setState({\r\n      hide: !this.state.hide\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { selectedOption, options } = this.state\r\n    return (\r\n      <div className='hide__elements'>\r\n        <h2>Hide Element</h2>\r\n        <Select\r\n          className='select'\r\n          classNamePrefix='select'\r\n          value={selectedOption}\r\n          onChange={this.handleChange}\r\n          options={options}\r\n        />\r\n        { selectedOption && selectedOption.value ?\r\n          <button  className='btn btn--primary' onClick={() => {this.confirmHideElement()}}>Submit</button> :\r\n          <button className='btn btn--disabled' disabled>Submit</button>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HideElements\r\n","import DeleteData from './DeleteData'\r\n\r\nexport default DeleteData\r\n","import React, { Component } from 'react'\r\nimport Select from 'react-select'\r\n\r\nclass DeleteData extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      selectedOption: null,\r\n      options: []\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.elements){\r\n      this.setDeleteOption(nextProps.elements)\r\n    }\r\n  }\r\n\r\n  handleChange = selectedOption => {\r\n    this.setState({ selectedOption })\r\n  }\r\n\r\n  setDeleteOption(elements) {\r\n    let options = []\r\n    elements.map((element) => {\r\n      options.push({ value: element.id, label: element.id })\r\n      return options\r\n    })\r\n    this.setState({\r\n      options: options\r\n    })\r\n  }\r\n\r\n  confirmDeleteElement() {\r\n    const { selectedOption, options } = this.state\r\n    this.props.altaRef.deleteElementById(selectedOption.value)\r\n    let newOptions = options\r\n    let index = newOptions.indexOf(selectedOption.value)\r\n    newOptions.splice(index,1)\r\n    this.setState({\r\n      selectedOption: null,\r\n      options: newOptions\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { options, selectedOption } = this.state\r\n    return (\r\n      <div className='delete__data'>\r\n        <h2>Delete Element</h2>\r\n        <Select\r\n          className='select'\r\n          classNamePrefix='select'\r\n          value={selectedOption}\r\n          onChange={this.handleChange}\r\n          options={options}\r\n        />\r\n        { selectedOption && selectedOption.value ?\r\n          <button  className='btn btn--primary' onClick={() => {this.confirmDeleteElement()}}>Submit</button> :\r\n          <button className='btn btn--disabled' disabled>Submit</button>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DeleteData\r\n","import React, { Component } from 'react'\nimport './App.scss'\nimport AltaMap from './components/AltaMap'\nimport AddData from './components/AddData'\nimport DrawerControl from './components/DrawerControl'\nimport HideElements from './components/HideElements'\nimport DeleteData from './components/DeleteData'\n\n// const ADDRESS_POINTS = [\n//   [-37.8839, null, \"571\"],\n//   [-37.8869090667, 175.3657417333, \"486\"],\n//   [-37.8894207167, 175.4015351167, \"807\"],\n//   [-37.8927369333, 175.4087452333, \"899\"],\n//   [-37.90585105, 175.4453463833, \"1273\"],\n//   [-37.9064188833, 175.4441556833, \"1258\"],\n//   [-37.90584715, 175.4463564333, \"1279\"],\n//   [-37.9033391333, 175.4244005667, \"1078\"],\n//   [-37.9061991333, 175.4492620333, \"1309\"],\n//   [-37.9058955167, 175.4445613167, \"1261\"],\n//   [-37.88888045, 175.39146475, \"734\"],\n// ]\n\n// const data = [{\n//   id: '12345',\n//   type: 'heatmap',\n//   tags: ['heatmap'],\n//   data: ADDRESS_POINTS,\n// },\n// {\n//   type: 'group_markers',\n//   tags: ['group'],\n//   data: [\n//     {lat:'50.270908',lng: '19.039993',popup: 'KATOWICE NOCĄ BO MOCĄ '},\n//     {lat:'50.170908',lng: '18.939993',popup: 'xxxxx '},\n//     {lat:'49.270908',lng: '18.039993',popup: 'aaaa '},\n//     {lat:'50.250908',lng: '19.029993',popup: 'zzzz '},\n//   ]\n// }]\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      didMount: false,\n      elements: []\n    }\n    this.updateAltaMapState = this.updateAltaMapState.bind(this)\n    this.altaRef = React.createRef()\n  }\n\n  componentDidMount() {\n    if(this.altaRef.current){\n      this.setState({\n        didMount: !this.state.didMount\n      })\n    }\n    this.altaRef.current.addMarker('51.270908', '20.039993','KdsaddasATOWICE NOCĄ BO MOCĄ ')\n  }\n  getDeleteAndHideComponent() {\n    return (\n      <div>\n        <DeleteData\n          altaRef={this.altaRef.current}\n          elements={this.state.elements}\n          />\n        <HideElements\n          altaRef={this.altaRef.current}\n          elements={this.state.elements}\n          />\n      </div>\n    )\n  }\n\n  updateAltaMapState() {\n    let elements = this.altaRef.current.getElements()\n    this.setState({\n      elements: elements\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>AltaMap</h1>\n        <DrawerControl\n          altaRef={this.altaRef}\n        />\n        <div style={{ width: '100%', height: '500px'}}>\n          <AltaMap ref={this.altaRef} updateAltaMapState={this.updateAltaMapState} />\n        </div>\n        <AddData\n          altaRef={this.altaRef}\n        />\n        { this.state.didMount &&\n          this.getDeleteAndHideComponent()\n        }\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}